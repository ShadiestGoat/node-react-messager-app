{"version":3,"sources":["reportWebVitals.ts","API/ws.ts","API/interactor.ts","components/leftSideBar.tsx","components/username-profile.tsx","pages/dm.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","endpoint","API","id","token","base","this","a","makeRequest","undefined","Accept","path","postData","post","axios","headers","getRequestHeaders","resp","data","console","error","get","SideBarLeft","className","src","props","pfp","alt","Component","QuickProfile","username","status","DMpage","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","IO","io","forceNew","on","msg","NewMessageAdder","err","setState","previewMsg","state","channId","channlId","messages","content","show","e","contextMenu","event","userIdContent","msgElmnt","createRef","sendMessage","bind","handleChange","Block","updateChannel","handleChangeOfUser","ChangeUser","handleKeyPress","Object","keys","map","addMsgToElmnt","onContextMenu","author","style","wordWrap","wordBreak","flexWrap","self","skipHtml","disallowedTypes","plugins","gfm","remarkExtLinks","children","newApi","getMessages","msgs","_id_","getSelf","getChannel","chan","messagesMaker","getUser","newUser","newMsg","channelId","date","DMID","friend","newMessages","msgElmnts","push","toString","api","IDDM","OpenDM","chanID","close","sock","preventDefault","target","value","emit","reciever","trim","curContent","alert","key","shiftKey","blocked","includes","Error","block","curUser","friendsArrayFin","friends","onClick","onSubmit","action","type","placeholder","onChange","name","otherMembers","ref","theme","animation","resize","onKeyPress","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acd8b357.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const endpoint = \"http://localhost:12322/\"\n","import axios from \"axios\"\nimport { Channel, IDUser, Messages, PublicUser, successStat } from \"./APItypes\"\nimport { endpoint } from \"./ws\"\n\nexport class API {\n    id: string\n    token: string\n    base: string\n    constructor (id:string, token:string) {\n        this.id = id\n        this.token = token\n        this.base = endpoint + \"api\"\n    }\n\n    async getUser(id:string) {\n        return await this.makeRequest<PublicUser>(\"/users/\" + id)\n    }\n    async getSelf() {\n        return await this.makeRequest<IDUser>(\"/self/\")\n    }\n    async getMessages(id:string) {\n        return await this.makeRequest<Messages>(\"/channels/\" + id + \"/messages/\")\n    }\n    async getChannel(id:string) {\n        return await this.makeRequest<Channel>(\"/channels/\" + id)\n    }\n\n    async block(id:string) {\n        return await this.makeRequest<successStat>(\"/users/\" + id + \"/block\", undefined, true)\n    }\n    async OpenDM(id:string) {\n        return await this.makeRequest<Channel>('/users/' + id + \"/opendm\", undefined, true)\n    }\n    private getRequestHeaders() {\n        return {\n                id: this.id,\n            token: this.token,\n            Accept: \"application/json\"\n        }\n    }\n\n    private async makeRequest<T=undefined>(path:string, postData?:any, post:boolean = false):Promise<T> {\n        if (postData || post) {\n            const resp = await axios.post<T | {error:string}>(this.base+path, postData, {headers: this.getRequestHeaders()})\n            if ('error' in resp.data) {\n                console.error((resp.data as any).error)\n                throw (resp.data as any).error\n            }\n            return resp.data\n        }\n        const resp = await axios.get<T | {error:string}>(this.base + path, {headers: this.getRequestHeaders()})\n        if ('error' in resp.data) {\n            console.error((resp.data as any).error)\n            throw (resp.data as any).error\n        }\n        return resp.data\n    }\n}","import { Component } from \"react\"\nimport { status } from \"../API/APItypes\"\n\nexport class SideBarLeft extends Component<{pfp:string, status:status}> {\n    render() {\n        return (\n            <div className=\"leftSideBar col-05-f fullCol\">\n                <img className=\"home\" src={this.props.pfp} alt=\"home\"></img>\n            </div>\n      )\n    }\n}","import {Component} from \"react\"\nimport { status } from \"../API/APItypes\"\n\n\nexport class QuickProfile extends Component<{pfp:string, username:string, status?:status, id:string}> {\n    render() {\n      return (\n      <div className=\"QuickProfile row\" id={this.props.id}>\n        <div className=\"col-3\">\n          <img src={this.props.pfp} className=\"pfp-f\" alt={this.props.username}></img>\n        </div>\n          <div className=\"col content NoMargin\">\n            <h3 className=\"username NoMargin\"> {this.props.username}</h3>\n            <p className=\"username NoMargin\"> { this.props.status ? this.props.status : \"\" } </p>\n          </div>\n      </div>\n      )\n    }\n}","import { io, Socket } from \"socket.io-client\"\nimport React, {Component, createRef, RefObject} from \"react\"\nimport { Channel, IDUser, Message, Messages, PreviewUser } from \"../API/APItypes\"\nimport { API } from \"../API/interactor\"\nimport { SideBarLeft } from \"../components/leftSideBar\"\nimport { QuickProfile } from \"../components/username-profile\"\nimport { endpoint } from \"../API/ws\";\nimport { Menu,Item, contextMenu,  } from \"react-contexify\"\nimport gfm from \"remark-gfm\"\nimport ReactMD from \"react-markdown\"\nimport remarkExtLinks from \"remark-external-links\"\n\n\nimport \"react-contexify/dist/ReactContexify.css\";\n\n\nexport class DMpage extends Component<{id:string, token:string, channlId:string}, {\n        API:API,\n        self?:IDUser,\n        channId:string,\n        id:string,\n        token:string,\n        previewMsg?:any,\n        show:any,\n        chan?:Channel,\n        io:Socket,\n        content?:string,\n        messages:{\n            [key:string]:Messages\n        },\n        msgElmnt: JSX.Element[],\n        userIdContent: string\n    }> {\n    messagesEndRef:RefObject<any>\n    constructor(props:any) {\n        super(props)\n        const IO = io(endpoint + `?token=${this.props.token}&id=${this.props.id}`, {path:\"/ws\",  forceNew:true,})\n        IO.on('RecieveMessage', async (msg:Omit<Message, \"author\"> & {author: string}) => {\n            await this.NewMessageAdder(msg)\n        }).on('error', async (err:Error) => {\n            this.setState({\n                previewMsg: \"\"\n            })\n        })\n        this.state = {\n            API: new API(this.props.id, this.props.token),\n            channId: this.props.channlId,\n            id: this.props.id,\n            token: this.props.token,\n            messages: {},\n            io:IO,\n            content: \"\",\n            show:(e:any) => {contextMenu.show({id: \"ContextMenuUser\",event: e,})},\n            userIdContent: this.props.id,\n            msgElmnt: []\n        }\n        this.messagesEndRef = createRef()\n        this.sendMessage = this.sendMessage.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.Block = this.Block.bind(this)\n        this.updateChannel = this.updateChannel.bind(this)\n        this.NewMessageAdder = this.NewMessageAdder.bind(this)\n        this.handleChangeOfUser = this.handleChangeOfUser.bind(this)\n        this.ChangeUser = this.ChangeUser.bind(this)\n        this.handleKeyPress = this.handleKeyPress.bind(this)\n    }\n\n    messagesMaker() {\n        this.setState({\n            msgElmnt: Object.keys((this.state.messages[(this.state.channId ?? \"\")] ?? {messages: {}}).messages).map((msg) =>\n            this.addMsgToElmnt(msg))\n        })\n    }\n\n    private addMsgToElmnt(msg:string, pfp?:string) {\n        return (\n        <li key={msg} id={msg} className=\"message row\">\n            <div className=\"col-05-f\" onContextMenu={this.state.show}>\n                <img src={pfp ? pfp : this.state.messages[this.state.channId].messages[msg].author.pfp} alt=\"pfp\" className=\"pfp\"/>\n            </div>\n            <div className=\"col message-content\">\n                <div style={{wordWrap: \"break-word\", wordBreak: \"break-all\", flexWrap:\"wrap\"}} className=\"MsgContent\">\n                    <h3> { pfp? this.state.self?.username : this.state.messages[this.state.channId].messages[msg].author.username } </h3>\n                    <ReactMD skipHtml={true} disallowedTypes={[\"heading\", \"html\", \"break\"]} plugins={[gfm, remarkExtLinks]} children={pfp ? msg : this.state.messages[this.state.channId].messages[msg].content} />\n                </div>\n            </div>\n        </li>\n        )\n    }\n\n    async componentDidMount() {\n        const newApi = new API(this.state.id, this.state.token)\n        const msgs = await this.state.API.getMessages(this.state.channId)\n\n        let messages = this.state.messages\n        messages[msgs._id_] = msgs\n\n        this.setState({\n            API: newApi,\n            self:await newApi.getSelf(),\n            messages: messages,\n            chan: await this.state.API.getChannel(this.state.channId),\n        })\n        this.messagesMaker()\n        this.scrollToBottom()\n    }\n\n    async NewMessageAdder(msg:Omit<Message, \"author\"> & {author: string}) {\n        try {\n            const newUser = await this.state.API.getUser(msg.author)\n            let newMsg:Message = {\n                _id_: msg._id_,\n                channelId: msg.channelId,\n                content: msg.content,\n                date: msg.date,\n                author: {\n                    _id_: msg.author,\n                    DMID: msg.channelId,\n                    friend: newUser.friend,\n                    pfp: newUser.pfp,\n                    status: newUser.status,\n                    username: newUser.username\n                }\n            }\n            let newMessages = this.state.messages\n            if (!newMessages[msg.channelId]) newMessages[msg.channelId] = { _id_: msg.channelId, messages:{} }\n\n            newMessages[msg.channelId].messages[msg._id_] = newMsg\n\n            let msgElmnts = this.state.msgElmnt\n            msgElmnts.push(this.addMsgToElmnt(newMsg._id_))\n            this.setState({\n                previewMsg: \"\",\n                messages: newMessages,\n                msgElmnt: msgElmnts\n            })\n\n            this.scrollToBottom()\n        } catch (err) {\n            return err.toString()\n        }\n    }\n\n    async ChangeUser() {\n        const api = new API(this.state.userIdContent, this.props.token)\n        const self = await api.getSelf()\n        const chanID = (self.IDDM[Object.keys(self.IDDM)[0]] ?? (await api.OpenDM(\"47615026313301367274\"))._id_)\n        this.state.io.close()\n        const sock = io(endpoint + `?token=${this.props.token}&id=${api.id}`, {path:\"/ws\",  forceNew:true,})\n\n        sock.on('RecieveMessage', async (msg:Omit<Message, \"author\"> & {author: string}) => {\n            await this.NewMessageAdder(msg)\n        }).on('error', async (err:Error) => {\n            this.setState({\n                previewMsg: \"\"\n            })\n        })\n        this.setState({\n            API: api,\n            self: self,\n            id: api.id,\n            io: sock,\n            channId: chanID,\n            messages: {},\n            userIdContent: api.id,\n            previewMsg: \"\",\n            chan: await api.getChannel(chanID),\n            content: \"\",\n        })\n    }\n\n    handleChangeOfUser(e: any) {\n        e.preventDefault()\n        this.setState({\n            userIdContent: e.target.value,\n        });\n    }\n\n    sendMessage() {\n        if (this.state.content) {\n            this.state.io.emit('SendMessage', {reciever:this.state.channId, content:this.state.content.trim()});\n            const curContent = this.state.content\n            this.setState({\n                content: ''\n            })\n            this.setState({\n                previewMsg: (this.addMsgToElmnt(curContent, this.state.self?.pfp ?? \"notFound   \"))\n            })\n            this.scrollToBottom()\n        } else {\n            alert(\"No emty messages\")\n        }\n    }\n\n\n    handleChange(event:React.ChangeEvent<HTMLTextAreaElement>) {\n        this.setState({\n            content: event.target.value\n        })\n    }\n\n    handleKeyPress(e:React.KeyboardEvent) {\n        if (e.key === 'Enter' && !e.shiftKey) this.sendMessage()\n    }\n\n    async Block(id:string) {\n        if (this.state.self?.blocked.includes(id)) {\n            throw new Error(\"alredy blocked\")\n        }\n        await this.state.API?.block(id)\n        let curUser = this.state.self\n        curUser?.blocked.push(id)\n        this.setState({\n            self:curUser\n        })\n    }\n\n\n    scrollToBottom = () => {\n        this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    async updateChannel(id:string, opendm:boolean = false) {\n        if (opendm) {\n            id = (await this.state.API.OpenDM(id))._id_\n        }\n        if (id === this.state.channId) {\n            return\n        }\n        let messages = this.state.messages\n        if (!messages[id]) {\n            messages[id] = await this.state.API.getMessages(id)\n        }\n        this.setState({\n            chan: await this.state.API.getChannel(id),\n            channId:id,\n            messages: messages,\n            previewMsg: \"\"\n        })\n        this.messagesMaker()\n        this.scrollToBottom()\n    }\n\n\n    render() {\n\n        // let friendsArrayFin:any[] = []\n        let friendsArrayFin:any[] = (this.state.self ?? {friends: []}).friends.map((friend:PreviewUser) => {\n            return (\n                <div key={friend._id_} onClick={() => {this.updateChannel( friend._id_, true )}}>\n                    <QuickProfile id={friend._id_} pfp={friend.pfp} username={friend.username}></QuickProfile>\n                </div>\n            )\n        })\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <SideBarLeft pfp={this.state.self?.pfp as string} status={this.state.self?.status ? this.state.self?.status : \"student\"}></SideBarLeft>\n                    <div className=\"col-2-f\">\n                            <div className=\"Box\">\n                                <QuickProfile id={this.state.self?._id_ ?? \"\"} pfp={this.state.self?.pfp ?? \"\"} username={this.state.self?.username ?? \"\"} ></QuickProfile>\n                            </div>\n                            <div className=\"FriendsTab\">\n                                {friendsArrayFin[0] ? friendsArrayFin : <h1 className=\"vertCenter\">Oh no!<br />You have no friends!</h1>}\n                            </div>\n                        <form className=\"UserSwitcher\" onSubmit={this.ChangeUser} action=\"#\">\n                            <input type=\"textArea\" placeholder=\"userId\" value={this.state.userIdContent} onChange={this.handleChangeOfUser}></input>\n                        </form>\n                    </div>\n\n                    <div className=\"col\">\n                <div className=\"Box row\">\n                    <div className=\"col-05\">\n                        <h1 className=\"NoMargin TopicBar\"> {this.state.chan?.name===\"DM\" ? \"@ \" : \"#\"} </h1>\n                    </div>\n                    <div className=\"col\">\n                        <h1 className=\"NoMargin TopicBar\">{ this.state.chan?.name===\"DM\" ? this.state.chan.otherMembers[0].username : this.state.chan?.name  }</h1>\n                    </div>\n                </div>\n                <div className=\"chat col-auto\">\n\n                    <div className=\"Messages row\">\n                        <ul>\n                            { this.state.msgElmnt }\n                        </ul>\n                        {this.state.previewMsg}\n                        <div ref={this.messagesEndRef} />\n                    </div>\n\n                    <Menu id=\"ContextMenuUser\" theme=\"dark\" animation=\"slide\">\n                        <div className=\"Local\">\n                            <Item>Profile</Item>\n                            <Item>Toggle Friendship</Item>\n                            <Item>Report</Item>\n                            <Item onClick={() => {this.Block(this.state.chan?.otherMembers[0]._id_ ?? \"\")}}>Block</Item>\n                            <Item>Note</Item>\n                        </div>\n                    </Menu>\n\n                    <div className=\"row\">\n                        <textarea style={{resize:\"none\"}} className=\"MessageBar\" value={this.state.content} onChange={this.handleChange} onKeyPress={this.handleKeyPress} ></textarea>\n                    </div>\n                </div>\n\n            </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./App.css\";\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DMpage } from './pages/dm';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <div className=\"App\">\n      <DMpage channlId=\"98282717244666928854\" token=\"544709652e868f2cb7dc8bb95ff6bdaad9002c4109501be3a32c89244cf4e773\" id=\"47615026313301367274\"> </DMpage>\n    </div>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}